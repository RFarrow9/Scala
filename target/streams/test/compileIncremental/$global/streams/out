[0m[[0m[0mdebug[0m] [0m[0mThe fileSearcher.FileObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productArity,[Default]), UsedName(file,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(canEqual,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(fileSearcher;FileObject;init;,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(FileObject,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) fileSearcher.FileObject: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) fileSearcher.FileObject.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of fileSearcher.FilterCheckerTest: Set(UsedName(fileSearcher;FileObject;init;,[Default]), UsedName(FileObject,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe fileSearcher.IOObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(file,[Default]), UsedName($init$,[Default]), UsedName(name,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) fileSearcher.IOObject: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) fileSearcher.IOObject.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of fileSearcher.FilterCheckerTest. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe fileSearcher.DirectoryObject has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productArity,[Default]), UsedName(file,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(canEqual,[Default]), UsedName(productElement,[Default]), UsedName(DirectoryObject,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(fileSearcher;DirectoryObject;init;,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) fileSearcher.DirectoryObject: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) fileSearcher.DirectoryObject.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of fileSearcher.FilterCheckerTest: Set(UsedName(DirectoryObject,[Default]), UsedName(fileSearcher;DirectoryObject;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(C:\Users\U1162369\IdeaProjects\File_Searcher\src\test\scala\FilterCheckerTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(C:\Users\U1162369\IdeaProjects\File_Searcher\src\test\scala\fileSearcher\FilterCheckerTest.scala, C:\Users\U1162369\IdeaProjects\File_Searcher\src\test\scala\fileSearcher\MatcherTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(fileSearcher.FileObject,ModifiedNames(changes = UsedName(productArity,[Default]), UsedName(file,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(canEqual,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(fileSearcher;FileObject;init;,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(FileObject,[Default]), UsedName(toString,[Default]))), NamesChange(fileSearcher.IOObject,ModifiedNames(changes = UsedName(file,[Default]), UsedName($init$,[Default]), UsedName(name,[Default]))), NamesChange(fileSearcher.DirectoryObject,ModifiedNames(changes = UsedName(productArity,[Default]), UsedName(file,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(canEqual,[Default]), UsedName(productElement,[Default]), UsedName(DirectoryObject,[Default]), UsedName(hashCode,[Default]), UsedName(productPrefix,[Default]), UsedName($init$,[Default]), UsedName(fileSearcher;DirectoryObject;init;,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(toString,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(fileSearcher.FilterCheckerTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(fileSearcher.FilterCheckerTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll sources are invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 2 sources: invalidated sources (3) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources to C:\Users\U1162369\IdeaProjects\File_Searcher\target\scala-2.11\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.5:compile for Scala 2.11.0[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.5:compile for Scala 2.11.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 71e8730b for Scala compiler version 2.11.0[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Java\jdk1.8.0_211\jre\classes;C:\Users\U1162369\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\U1162369\IdeaProjects\File_Searcher\target\scala-2.11\test-classes;C:\Users\U1162369\IdeaProjects\File_Searcher\target\scala-2.11\classes;C:\Users\U1162369\.ivy2\cache\org.scalatest\scalatest_2.11\bundles\scalatest_2.11-3.0.8.jar;C:\Users\U1162369\.ivy2\cache\org.scalactic\scalactic_2.11\bundles\scalactic_2.11-3.0.8.jar;C:\Users\U1162369\.ivy2\cache\org.scala-lang\scala-reflect\jars\scala-reflect-2.11.0.jar;C:\Users\U1162369\.ivy2\cache\org.scala-lang.modules\scala-xml_2.11\bundles\scala-xml_2.11-1.2.0.jar;C:\Users\U1162369\.ivy2\cache\com.novocode\junit-interface\jars\junit-interface-0.9.jar;C:\Users\U1162369\.ivy2\cache\junit\junit-dep\jars\junit-dep-4.8.2.jar;C:\Users\U1162369\.ivy2\cache\org.hamcrest\hamcrest-core\jars\hamcrest-core-1.1.jar;C:\Users\U1162369\.ivy2\cache\org.scala-tools.testing\test-interface\jars\test-interface-0.5.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.117517614 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from fileSearcher.MatcherTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(fileSearcher.MatcherTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(fileSearcher.MatcherTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(fileSearcher.MatcherTest,ModifiedNames(changes = UsedName(assertTypeError,[Default]), UsedName(TheyVerbString,[Default]), UsedName(execute$default$6,[Default]), UsedName(execute$default$7,[Default]), UsedName(StringShouldWrapperForVerb,[Default]), UsedName(createCatchReporter,[Default]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(InAndIgnoreMethods,[Default]), UsedName(ignore,[Default]), UsedName(StringCanWrapperForVerb,[Default]), UsedName(suiteId,[Default]), UsedName(notifyAll,[Default]), UsedName(IgnoreWord,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(tags,[Default]), UsedName(synchronized,[Default]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(assertDoesNotCompile,[Default]), UsedName(clone,[Default]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(run,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ItWord,[Default]), UsedName(IgnoreVerbString,[Default]), UsedName(StringMustWrapperForVerb,[Default]), UsedName(NoArgTest,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(execute$default$1,[Default]), UsedName(ItVerbStringTaggedAs,[Default]), UsedName(rerunner,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(execute$default$4,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(MatcherTest,[Default]), UsedName(runTests,[Default]), UsedName(expectedTestCount,[Default]), UsedName(testDataFor,[Default]), UsedName(withClue,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(assertThrows,[Default]), UsedName(trap,[Default]), UsedName(IgnoreVerbStringTaggedAs,[Default]), UsedName(ItVerbString,[Default]), UsedName(intercept,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(defaultEquality,[Default]), UsedName(TheyWord,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(they,[Default]), UsedName(eq,[Default]), UsedName(markup,[Default]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(behavior,[Default]), UsedName(ne,[Default]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(suiteName,[Default]), UsedName(note,[Default]), UsedName(fail,[Default]), UsedName(info,[Default]), UsedName(nestedSuites,[Default]), UsedName(hashCode,[Default]), UsedName(InAndIgnoreMethodsAfterTaggedAs,[Default]), UsedName(assertResult,[Default]), UsedName(execute$default$3,[Default]), UsedName(notify,[Default]), UsedName(asInstanceOf,[Default]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(runNestedSuites,[Default]), UsedName(TheyVerbStringTaggedAs,[Default]), UsedName(===,[Default]), UsedName(it,[Default]), UsedName(behave,[Default]), UsedName(testNames,[Default]), UsedName(styleName,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(succeed,[Default]), UsedName(assertCompiles,[Default]), UsedName(!==,[Default]), UsedName(BehaviorWord,[Default]), UsedName($isInstanceOf,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName($init$,[Default]), UsedName(execute$default$5,[Default]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(registerIgnoredTest,[Default]), UsedName(execute$default$2,[Default]), UsedName(cancel,[Default]), UsedName(##,[Default]), UsedName(assume,[Default]), UsedName(Equalizer,[Default]), UsedName(equals,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(wait,[Default]), UsedName(assertionsHelper,[Default]), UsedName(finalize,[Default]), UsedName(fileSearcher;MatcherTest;init;,[Default]), UsedName(registerTest,[Default]), UsedName(pending,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(toString,[Default]), UsedName(runTest,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(withFixture,[Default]), UsedName(execute,[Default]), UsedName(assert,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(alert,[Default]))) invalidates 1 classes due to The fileSearcher.MatcherTest has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(convertToEqualizer,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(fileSearcher.MatcherTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
